name: Complete Test Rich Module

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ["3.9"]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install and configure Poetry
        # TODO: workaround for https://github.com/snok/install-poetry/issues/94
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.3.1
          virtualenvs-in-project: true
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Cache .pytest_cache directory
        uses: actions/cache@v3
        id: pytest-cache
        with:
          path: tests/.pytest_cache
          key: ${{ runner.os }}-pytest-${{ hashFiles('**/test_*.py') }}
          restore-keys: |
            ${{ runner.os }}-pytest-
      - name: Test with pytest (with coverage)
        run: |
          source $VENV
          pytest tests -v --cov=./rich --cov-report=xml:./coverage.xml --cov-report term-missing --rank --rank-weight=1-0-0
        continue-on-error: true
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: rich
          flags: unittests
          env_vars: OS,PYTHON
